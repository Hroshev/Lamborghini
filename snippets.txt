#Accordion
{
	"accordion": {
		"scope": "html",
		"prefix": "accordion",
		"body": [
			"<div class=\"accordion\">",
			"\t<div class=\"accordion__box\">",
			"\t\t<div class=\"accordion__top\">",
			"\t\t\t<h4 class=\"accordion__top-question\">Title</h4>",
			"\t\t\t<img class=\"accordion__top-arrow\" src=\"@img\" alt=\"arrow\">",
			"\t\t</div>",
			"\t\t<div class=\"accordion__answer\">",
			"\t\t\t<p class=\"accordion__answer-text\">Text</p>",
			"\t\t</div>",
			"\t</div>",
			"</div>"
		],
		"description": "Accordion Snippet"
	}
}
#Accordion(SCSS)
{
	"Print to console": {
		"scope": "scss",
		"prefix": "accordionscss",
		"body": [
			".accordion {",
			"\twidth: 100%;",
			"\tmax-width: 700px;",
			"\tmargin: 0 auto;",
			"\tbox-shadow: 0px 2px 8px rgba(0, 0, 0, 0.0818614);",
			"\t&__box {",
			"\t\tpadding: 40px;",
			"\t\tcursor: pointer;",
			"\t\t@include tablet-min {",
			"\t\t\tpadding: 20px;",
			"\t\t}",
			"\t\t&.active .accordion__answer {",
			"\t\t\tmax-height: 300px;",
			"\t\t\tanimation: accordionFade 1s ease-in-out;",
			"\t\t}",
			"\t\t&.active .accordion__arrow {",
			"\t\t\ttransform: rotate(180deg);",
			"\t\t}",
			"\t}",
			"\t&__top {",
			"\t\tdisplay: flex;",
			"\t\tjustify-content: space-between;",
			"\t\talign-items: center;",
			"\t}",
			"\t&__top-question{}",
			"\t&__top-arrow {",
			"\t\twidth: 30px !important;",
			"\t\theight: 30px !important;",
			"\t\ttransition: transform 0.5s ease-in;",
			"\t}",
			"\t&__answer {",
			"\t\tmax-height: 0;",
			"\t\toverflow: hidden;",
			"\t\ttransition: max-height 1.2s ease;",
			"\t}",
			"\t&__answer-text{",
			"\t\tpadding-top: 20px;",
			"\t}",
			"}",
			"@keyframes accordionFade {",
			"\tfrom {",
			"\t\topacity: 0;",
			"\t\ttransform: translateY(-10px);",
			"\t}",
			"\tto {",
			"\t\topacity: 1;",
			"\t\ttransform: translateY(0px);",
			"\t}",
			"}",
		],
		"description": "Accordion Styles"
	}
}
#Swiper
{
	"Print to console": {
		"scope": "html",
		"prefix": "swiper",
		"body": [
			"<div class=\"swiper\">",
			"\t<div class=\"swiper-wrapper\">",
			"\t\t<div class=\"swiper-slide\">Slide 1</div>",
			"\t\t<div class=\"swiper-slide\">Slide 2</div>",
			"\t</div>",
			"\t<!-- If we need pagination -->",
			"\t<div class=\"swiper-pagination\"></div>",
			"\t<!-- If we need navigation buttons -->",
			"\t<div class=\"swiper-button-prev\"></div>",
			"\t<div class=\"swiper-button-next\"></div>",
			"</div>",
		],
		"description": "swiper html"
	}
}
#Swiper(SCSS)
{
	"Print to console": {
		"scope": "scss",
		"prefix": "swiperscss",
		"body": [
			"//*Import Swiper + navigation, pagination modules",
			"@import \"../../node_modules/swiper/swiper\";",
			"@import \"../../node_modules/swiper/modules/navigation/navigation\";",
			"@import \"../../node_modules/swiper/modules/pagination/pagination\";\n",
			"//*Import all modules Swiper",
			"// @import \"../../node_modules/swiper/swiper-bundle\";",
		],
		"description": "Conecting swiper style"
	}
}
#FlexWrapper
{
	"Print to console": {
		"scope": "scss",
		"prefix": "flexWrapper",
		"body": [
			"display: flex;",
			"justify-content: space-between;",
			"align-items: center;",
			"gap: 20px;" 
		],
		"description": "flex wrapper"
	}
}
#GridWrapepr
{
	"Print to console": {
		"scope": "scss",
		"prefix": "gridWrapepr",
		"body": [
			"display: grid;",
			"grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));",
			"grid-gap: 20px;",
		],
		"description": "grid wrapper"
	}
}
#Popup
{
	"Print to console": {
		"scope": "html",
		"prefix": "popup",
		"body": [
			"<!--#Example---<a href=\"#FAQpopup\" class=\"popup-link\"></a>-->",
			"<!-- Popup -->\n",
			"<!-- FAQpopup -->",
			"<div id=\"FAQpopup\" class=\"popup\">",
			"\t<div class=\"form__body\">",
			"\t\t<div class=\"popup__body\">",
			"\t\t\t<div class=\"popup__content\">",
			"\t\t\t\t<a href=\"#\" class=\"popup__close close-popup\"></a>",
			"\t\t\t\t<div class=\"popup__title\"></div>",
			"\t\t\t\t<div class=\"popup__text\"></div>",
			"\t\t\t</div>",
			"\t\t</div>",
			"\t</div>",
			"</div>",
			"<!-- //Popup -->",
		],
		"description": "popup html"
	}
}
#Popup(SCSS)
{
	"Print to console": {
		"scope": "scss",
		"prefix": "popupscss",
		"body": [
			".popup {",
			"\tposition: fixed;",
			"\twidth: 100%;",
			"\theight: 100%;",
			"\tbackground-color: rgba(0, 0, 0, 0.8);",
			"\ttop: 0;",
			"\tleft: 0;",
			"\topacity: 0;",
			"\tvisibility: hidden;",
			"\toverflow-y: auto;",
			"\toverflow-x: hidden;",
			"\tz-index: 50;",
			"\ttransition: all 0.8s ease 0s;",
			"\t&__body {",
			"\t\tmin-height: 100%;",
			"\t\tdisplay: flex;",
			"\t\tjustify-content: center;",
			"\t\talign-items: center;",
			"\t\tpadding: 30px 10px;",
			"\t}",
			"\t&__content {",
			"\t\tmax-width: 850px;",
			"\t\tpadding: 50px;",
			"\t\tbackground-color: #e5e5e5;",
			"\t\tposition: relative;",
			"\t\topacity: 0;",
			"\t\ttransform: translate(0px, -100%);",
			"\t\ttransition: all 0.8s ease 0s;",
			"\t\t@include tablet-min {",
			"\t\t\tpadding: 20px;",
			"\t\t}",
			"\t}",
			"\t&__close {",
			"\t\tposition: absolute;",
			"\t\ttop: 15px;",
			"\t\tright: 15px;",
			"\t\twidth: 30px;",
			"\t\theight: 30px;",
			"\t\topacity: 0.6;",
			"\t\ttransition: opacity .2s linear;",
			"\t\t&:hover {",
			"\t\t\topacity: 1;",
			"\t\t}",
			"\t\t&::before,",
			"\t\t&::after {",
			"\t\t\tposition: absolute;",
			"\t\t\tcontent: \"\";",
			"\t\t\tleft: 15px;",
			"\t\t\theight: 15px;",
			"\t\t\twidth: 2px;",
			"\t\t\tbackground-color: #000;",
			"\t\t}",
			"\t\t&::before {",
			"\t\t\ttransform: rotate(45deg);",
			"\t\t}",
			"\t\t&::after {",
			"\t\t\ttransform: rotate(-45deg);",
			"\t\t}",
			"\t}",
			"\t&__title {}",
			"\t&__text {}",
			"\t&.open {",
			"\t\topacity: 1;",
			"\t\tvisibility: visible;",
			"\t}",
			"\t&.open .popup__content {",
			"\t\topacity: 1;",
			"\t\ttransform: translate(0px, 0px);",
			"\t}",
			"}",
		],
		"description": "popup style"
	}
}
#backgroundImage(SCSS)
{
	"Print to console": {
		"scope": "scss",
		"prefix": "backgroundImage",
		"body": [
			"background: url(\"@img\") 50% 50%/cover no-repeat;",
		],
		"description": "Background image style"
	}
}
#centerPosition(SCSS)
{
	"Print to console": {
		"scope": "scss",
		"prefix": "centerPosition",
		"body": [
			"position: absolute;",
			"top: 50%;",
			"left: 50%;",
			"transform: translate(-50%, -50%);"
		],
		"description": "Center relative to the element"
	}
}

